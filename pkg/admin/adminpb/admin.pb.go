// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: admin.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminTestcaseResponse_Status int32

const (
	AdminTestcaseResponse_OK    AdminTestcaseResponse_Status = 0
	AdminTestcaseResponse_ERROR AdminTestcaseResponse_Status = 1
)

// Enum value maps for AdminTestcaseResponse_Status.
var (
	AdminTestcaseResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	AdminTestcaseResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x AdminTestcaseResponse_Status) Enum() *AdminTestcaseResponse_Status {
	p := new(AdminTestcaseResponse_Status)
	*p = x
	return p
}

func (x AdminTestcaseResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminTestcaseResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_proto_enumTypes[0].Descriptor()
}

func (AdminTestcaseResponse_Status) Type() protoreflect.EnumType {
	return &file_admin_proto_enumTypes[0]
}

func (x AdminTestcaseResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminTestcaseResponse_Status.Descriptor instead.
func (AdminTestcaseResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{1, 0}
}

type AdminResponse_Status int32

const (
	AdminResponse_OK    AdminResponse_Status = 0
	AdminResponse_ERROR AdminResponse_Status = 1
)

// Enum value maps for AdminResponse_Status.
var (
	AdminResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	AdminResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x AdminResponse_Status) Enum() *AdminResponse_Status {
	p := new(AdminResponse_Status)
	*p = x
	return p
}

func (x AdminResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_proto_enumTypes[1].Descriptor()
}

func (AdminResponse_Status) Type() protoreflect.EnumType {
	return &file_admin_proto_enumTypes[1]
}

func (x AdminResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminResponse_Status.Descriptor instead.
func (AdminResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10, 0}
}

type AdProblemWithTestCases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem   *Problem      `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	TestCases []*AdTestCase `protobuf:"bytes,2,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
}

func (x *AdProblemWithTestCases) Reset() {
	*x = AdProblemWithTestCases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdProblemWithTestCases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdProblemWithTestCases) ProtoMessage() {}

func (x *AdProblemWithTestCases) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdProblemWithTestCases.ProtoReflect.Descriptor instead.
func (*AdProblemWithTestCases) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{0}
}

func (x *AdProblemWithTestCases) GetProblem() *Problem {
	if x != nil {
		return x.Problem
	}
	return nil
}

func (x *AdProblemWithTestCases) GetTestCases() []*AdTestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

type AdminTestcaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  AdminTestcaseResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.AdminTestcaseResponse_Status" json:"status,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*AdminTestcaseResponse_Error
	//	*AdminTestcaseResponse_Data
	Payload isAdminTestcaseResponse_Payload `protobuf_oneof:"payload"`
}

func (x *AdminTestcaseResponse) Reset() {
	*x = AdminTestcaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminTestcaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminTestcaseResponse) ProtoMessage() {}

func (x *AdminTestcaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminTestcaseResponse.ProtoReflect.Descriptor instead.
func (*AdminTestcaseResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{1}
}

func (x *AdminTestcaseResponse) GetStatus() AdminTestcaseResponse_Status {
	if x != nil {
		return x.Status
	}
	return AdminTestcaseResponse_OK
}

func (x *AdminTestcaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *AdminTestcaseResponse) GetPayload() isAdminTestcaseResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AdminTestcaseResponse) GetError() string {
	if x, ok := x.GetPayload().(*AdminTestcaseResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *AdminTestcaseResponse) GetData() *AdProblemWithTestCases {
	if x, ok := x.GetPayload().(*AdminTestcaseResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isAdminTestcaseResponse_Payload interface {
	isAdminTestcaseResponse_Payload()
}

type AdminTestcaseResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type AdminTestcaseResponse_Data struct {
	Data *AdProblemWithTestCases `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*AdminTestcaseResponse_Error) isAdminTestcaseResponse_Payload() {}

func (*AdminTestcaseResponse_Data) isAdminTestcaseResponse_Payload() {}

type AdUpdateTestCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestCaseId string        `protobuf:"bytes,1,opt,name=test_case_id,json=testCaseId,proto3" json:"test_case_id,omitempty"`
	ProblemId  int32         `protobuf:"varint,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	TestCases  []*AdTestCase `protobuf:"bytes,3,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
}

func (x *AdUpdateTestCaseRequest) Reset() {
	*x = AdUpdateTestCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdUpdateTestCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdUpdateTestCaseRequest) ProtoMessage() {}

func (x *AdUpdateTestCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdUpdateTestCaseRequest.ProtoReflect.Descriptor instead.
func (*AdUpdateTestCaseRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{2}
}

func (x *AdUpdateTestCaseRequest) GetTestCaseId() string {
	if x != nil {
		return x.TestCaseId
	}
	return ""
}

func (x *AdUpdateTestCaseRequest) GetProblemId() int32 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AdUpdateTestCaseRequest) GetTestCases() []*AdTestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

type AdTestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestCaseId     string `protobuf:"bytes,1,opt,name=test_case_id,json=testCaseId,proto3" json:"test_case_id,omitempty"`
	Input          string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	ExpectedOutput string `protobuf:"bytes,3,opt,name=expected_output,json=expectedOutput,proto3" json:"expected_output,omitempty"`
}

func (x *AdTestCase) Reset() {
	*x = AdTestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdTestCase) ProtoMessage() {}

func (x *AdTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdTestCase.ProtoReflect.Descriptor instead.
func (*AdTestCase) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{3}
}

func (x *AdTestCase) GetTestCaseId() string {
	if x != nil {
		return x.TestCaseId
	}
	return ""
}

func (x *AdTestCase) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *AdTestCase) GetExpectedOutput() string {
	if x != nil {
		return x.ExpectedOutput
	}
	return ""
}

type AdTestCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int32         `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	TestCases []*AdTestCase `protobuf:"bytes,2,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
}

func (x *AdTestCaseRequest) Reset() {
	*x = AdTestCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdTestCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdTestCaseRequest) ProtoMessage() {}

func (x *AdTestCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdTestCaseRequest.ProtoReflect.Descriptor instead.
func (*AdTestCaseRequest) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{4}
}

func (x *AdTestCaseRequest) GetProblemId() int32 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AdTestCaseRequest) GetTestCases() []*AdTestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

type AdProblemId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AdProblemId) Reset() {
	*x = AdProblemId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdProblemId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdProblemId) ProtoMessage() {}

func (x *AdProblemId) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdProblemId.ProtoReflect.Descriptor instead.
func (*AdProblemId) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{5}
}

func (x *AdProblemId) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Discription string `protobuf:"bytes,3,opt,name=Discription,proto3" json:"Discription,omitempty"`
	Difficulty  string `protobuf:"bytes,4,opt,name=Difficulty,proto3" json:"Difficulty,omitempty"`
	Type        string `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`
	IsPremium   bool   `protobuf:"varint,6,opt,name=IsPremium,proto3" json:"IsPremium,omitempty"`
}

func (x *Problem) Reset() {
	*x = Problem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{6}
}

func (x *Problem) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Problem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Problem) GetDiscription() string {
	if x != nil {
		return x.Discription
	}
	return ""
}

func (x *Problem) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *Problem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Problem) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

type AdProblemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problems []*Problem `protobuf:"bytes,1,rep,name=problems,proto3" json:"problems,omitempty"`
}

func (x *AdProblemList) Reset() {
	*x = AdProblemList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdProblemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdProblemList) ProtoMessage() {}

func (x *AdProblemList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdProblemList.ProtoReflect.Descriptor instead.
func (*AdProblemList) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{7}
}

func (x *AdProblemList) GetProblems() []*Problem {
	if x != nil {
		return x.Problems
	}
	return nil
}

type AdID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AdID) Reset() {
	*x = AdID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdID) ProtoMessage() {}

func (x *AdID) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdID.ProtoReflect.Descriptor instead.
func (*AdID) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{8}
}

func (x *AdID) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type AdminLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *AdminLogin) Reset() {
	*x = AdminLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLogin) ProtoMessage() {}

func (x *AdminLogin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLogin.ProtoReflect.Descriptor instead.
func (*AdminLogin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{9}
}

func (x *AdminLogin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  AdminResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.AdminResponse_Status" json:"status,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*AdminResponse_Error
	//	*AdminResponse_Data
	Payload isAdminResponse_Payload `protobuf_oneof:"payload"`
}

func (x *AdminResponse) Reset() {
	*x = AdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminResponse) ProtoMessage() {}

func (x *AdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminResponse.ProtoReflect.Descriptor instead.
func (*AdminResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10}
}

func (x *AdminResponse) GetStatus() AdminResponse_Status {
	if x != nil {
		return x.Status
	}
	return AdminResponse_OK
}

func (x *AdminResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *AdminResponse) GetPayload() isAdminResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AdminResponse) GetError() string {
	if x, ok := x.GetPayload().(*AdminResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *AdminResponse) GetData() string {
	if x, ok := x.GetPayload().(*AdminResponse_Data); ok {
		return x.Data
	}
	return ""
}

type isAdminResponse_Payload interface {
	isAdminResponse_Payload()
}

type AdminResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type AdminResponse_Data struct {
	Data string `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*AdminResponse_Error) isAdminResponse_Payload() {}

func (*AdminResponse_Data) isAdminResponse_Payload() {}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{11}
}

func (x *UserID) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type AdUserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User_ID                string                 `protobuf:"bytes,1,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	User_Name              string                 `protobuf:"bytes,2,opt,name=User_Name,json=UserName,proto3" json:"User_Name,omitempty"`
	Email                  string                 `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Phone                  string                 `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"`
	Is_Prime_Member        bool                   `protobuf:"varint,5,opt,name=is_Prime_Member,json=isPrimeMember,proto3" json:"is_Prime_Member,omitempty"`
	Is_Blocked             bool                   `protobuf:"varint,6,opt,name=Is_Blocked,json=IsBlocked,proto3" json:"Is_Blocked,omitempty"`
	Membership_Expiry_Date *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=membership_Expiry_Date,json=membershipExpiryDate,proto3" json:"membership_Expiry_Date,omitempty"`
}

func (x *AdUserProfile) Reset() {
	*x = AdUserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdUserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdUserProfile) ProtoMessage() {}

func (x *AdUserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdUserProfile.ProtoReflect.Descriptor instead.
func (*AdUserProfile) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{12}
}

func (x *AdUserProfile) GetUser_ID() string {
	if x != nil {
		return x.User_ID
	}
	return ""
}

func (x *AdUserProfile) GetUser_Name() string {
	if x != nil {
		return x.User_Name
	}
	return ""
}

func (x *AdUserProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdUserProfile) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AdUserProfile) GetIs_Prime_Member() bool {
	if x != nil {
		return x.Is_Prime_Member
	}
	return false
}

func (x *AdUserProfile) GetIs_Blocked() bool {
	if x != nil {
		return x.Is_Blocked
	}
	return false
}

func (x *AdUserProfile) GetMembership_Expiry_Date() *timestamppb.Timestamp {
	if x != nil {
		return x.Membership_Expiry_Date
	}
	return nil
}

type AdNoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdNoParam) Reset() {
	*x = AdNoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdNoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdNoParam) ProtoMessage() {}

func (x *AdNoParam) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdNoParam.ProtoReflect.Descriptor instead.
func (*AdNoParam) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{13}
}

type AdUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*AdUserProfile `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *AdUserList) Reset() {
	*x = AdUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdUserList) ProtoMessage() {}

func (x *AdUserList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdUserList.ProtoReflect.Descriptor instead.
func (*AdUserList) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{14}
}

func (x *AdUserList) GetUsers() []*AdUserProfile {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_admin_proto protoreflect.FileDescriptor

var file_admin_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x16, 0x41, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x54,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x65, 0x73, 0x74,
	0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x54, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x22, 0x6d,
	0x0a, 0x0a, 0x41, 0x64, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x61, 0x0a,
	0x11, 0x41, 0x64, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x54, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73,
	0x22, 0x1d, 0x0a, 0x0b, 0x41, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22,
	0xa3, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x50, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x50, 0x72,
	0x65, 0x6d, 0x69, 0x75, 0x6d, 0x22, 0x38, 0x0a, 0x0d, 0x41, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x22,
	0x16, 0x0a, 0x04, 0x41, 0x64, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x18, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x8a, 0x02, 0x0a, 0x0d, 0x41, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1b, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x50, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x49, 0x73, 0x5f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x50, 0x0a, 0x16, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x41, 0x64, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22,
	0x35, 0x0a, 0x0a, 0x41, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x32, 0xa8, 0x05, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x4e,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x46,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x13, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x12, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x12, 0x38, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x6d, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0f, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x63, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_proto_rawDescOnce sync.Once
	file_admin_proto_rawDescData = file_admin_proto_rawDesc
)

func file_admin_proto_rawDescGZIP() []byte {
	file_admin_proto_rawDescOnce.Do(func() {
		file_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_proto_rawDescData)
	})
	return file_admin_proto_rawDescData
}

var file_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_admin_proto_goTypes = []interface{}{
	(AdminTestcaseResponse_Status)(0), // 0: pb.AdminTestcaseResponse.Status
	(AdminResponse_Status)(0),         // 1: pb.AdminResponse.Status
	(*AdProblemWithTestCases)(nil),    // 2: pb.AdProblemWithTestCases
	(*AdminTestcaseResponse)(nil),     // 3: pb.AdminTestcaseResponse
	(*AdUpdateTestCaseRequest)(nil),   // 4: pb.AdUpdateTestCaseRequest
	(*AdTestCase)(nil),                // 5: pb.AdTestCase
	(*AdTestCaseRequest)(nil),         // 6: pb.AdTestCaseRequest
	(*AdProblemId)(nil),               // 7: pb.AdProblemId
	(*Problem)(nil),                   // 8: pb.Problem
	(*AdProblemList)(nil),             // 9: pb.AdProblemList
	(*AdID)(nil),                      // 10: pb.AdID
	(*AdminLogin)(nil),                // 11: pb.AdminLogin
	(*AdminResponse)(nil),             // 12: pb.AdminResponse
	(*UserID)(nil),                    // 13: pb.userID
	(*AdUserProfile)(nil),             // 14: pb.AdUserProfile
	(*AdNoParam)(nil),                 // 15: pb.AdNoParam
	(*AdUserList)(nil),                // 16: pb.AdUserList
	(*timestamppb.Timestamp)(nil),     // 17: google.protobuf.Timestamp
}
var file_admin_proto_depIdxs = []int32{
	8,  // 0: pb.AdProblemWithTestCases.problem:type_name -> pb.Problem
	5,  // 1: pb.AdProblemWithTestCases.test_cases:type_name -> pb.AdTestCase
	0,  // 2: pb.AdminTestcaseResponse.status:type_name -> pb.AdminTestcaseResponse.Status
	2,  // 3: pb.AdminTestcaseResponse.data:type_name -> pb.AdProblemWithTestCases
	5,  // 4: pb.AdUpdateTestCaseRequest.test_cases:type_name -> pb.AdTestCase
	5,  // 5: pb.AdTestCaseRequest.test_cases:type_name -> pb.AdTestCase
	8,  // 6: pb.AdProblemList.problems:type_name -> pb.Problem
	1,  // 7: pb.AdminResponse.status:type_name -> pb.AdminResponse.Status
	17, // 8: pb.AdUserProfile.membership_Expiry_Date:type_name -> google.protobuf.Timestamp
	14, // 9: pb.AdUserList.users:type_name -> pb.AdUserProfile
	11, // 10: pb.AdminService.AdminLoginRequest:input_type -> pb.AdminLogin
	13, // 11: pb.AdminService.AdminBlockUser:input_type -> pb.userID
	13, // 12: pb.AdminService.AdminUnBlockUser:input_type -> pb.userID
	15, // 13: pb.AdminService.AdminGetAllUsers:input_type -> pb.AdNoParam
	10, // 14: pb.AdminService.AdminFindUserByID:input_type -> pb.AdID
	8,  // 15: pb.AdminService.InsertProblem:input_type -> pb.Problem
	15, // 16: pb.AdminService.AdminGetAllProblems:input_type -> pb.AdNoParam
	8,  // 17: pb.AdminService.AdminEditProblem:input_type -> pb.Problem
	7,  // 18: pb.AdminService.AdminUpgradeProbem:input_type -> pb.AdProblemId
	6,  // 19: pb.AdminService.InsertTestCases:input_type -> pb.AdTestCaseRequest
	4,  // 20: pb.AdminService.UpdateTestCases:input_type -> pb.AdUpdateTestCaseRequest
	7,  // 21: pb.AdminService.GetProblemWithTestCases:input_type -> pb.AdProblemId
	12, // 22: pb.AdminService.AdminLoginRequest:output_type -> pb.AdminResponse
	12, // 23: pb.AdminService.AdminBlockUser:output_type -> pb.AdminResponse
	12, // 24: pb.AdminService.AdminUnBlockUser:output_type -> pb.AdminResponse
	16, // 25: pb.AdminService.AdminGetAllUsers:output_type -> pb.AdUserList
	14, // 26: pb.AdminService.AdminFindUserByID:output_type -> pb.AdUserProfile
	12, // 27: pb.AdminService.InsertProblem:output_type -> pb.AdminResponse
	9,  // 28: pb.AdminService.AdminGetAllProblems:output_type -> pb.AdProblemList
	8,  // 29: pb.AdminService.AdminEditProblem:output_type -> pb.Problem
	12, // 30: pb.AdminService.AdminUpgradeProbem:output_type -> pb.AdminResponse
	12, // 31: pb.AdminService.InsertTestCases:output_type -> pb.AdminResponse
	12, // 32: pb.AdminService.UpdateTestCases:output_type -> pb.AdminResponse
	3,  // 33: pb.AdminService.GetProblemWithTestCases:output_type -> pb.AdminTestcaseResponse
	22, // [22:34] is the sub-list for method output_type
	10, // [10:22] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_admin_proto_init() }
func file_admin_proto_init() {
	if File_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdProblemWithTestCases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminTestcaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdUpdateTestCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdTestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdTestCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdProblemId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Problem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdProblemList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdUserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdNoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_admin_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AdminTestcaseResponse_Error)(nil),
		(*AdminTestcaseResponse_Data)(nil),
	}
	file_admin_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*AdminResponse_Error)(nil),
		(*AdminResponse_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_proto_goTypes,
		DependencyIndexes: file_admin_proto_depIdxs,
		EnumInfos:         file_admin_proto_enumTypes,
		MessageInfos:      file_admin_proto_msgTypes,
	}.Build()
	File_admin_proto = out.File
	file_admin_proto_rawDesc = nil
	file_admin_proto_goTypes = nil
	file_admin_proto_depIdxs = nil
}
